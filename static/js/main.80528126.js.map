{"version":3,"file":"static/js/main.80528126.js","mappings":"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","sources":["App.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport {\n  View,\n  Text,\n  TouchableOpacity,\n  StyleSheet,\n  Alert,\n  TextInput,\n  ActivityIndicator,\n  ScrollView,\n  RefreshControl,\n  Dimensions\n} from 'react-native';\nimport 'react-native-gesture-handler';\nimport { enableScreens } from 'react-native-screens';\nimport { Ionicons } from '@expo/vector-icons';\nimport { RFPercentage } from \"react-native-responsive-fontsize\";\n\nenableScreens();\n\nconst { width, height } = Dimensions.get('window');\n\nconst USER_NAMES = {\n  cguerreiro: 'Carlos Guerreiro',\n  lmurtinha: 'Luis Murtinha',\n  mcampos: 'Marco Campos',\n};\n\nconst SEQUENCIA = [\n  'Bancas: 82, 83',\n  'Loja 1',\n  'Loja 2',\n  // Other entries\n  'Espaço n.º 4',\n];\n\nconst NOMES = {\n  'Banca 82, 83': 'Ramiro António Gonçalves ',\n  'Loja 1': 'Maria de Nazaré dos Reis Santos',\n  'Loja 2': 'Célia Maria Martins das Neves',\n  // Other names\n  'Espaço n.º 4': 'BY FAMILY',\n};\n\nconst corridorMap = {\n  'Banca 82, 83': 'Corredor Sul/Nascente',\n  'Loja 1': 'Corredor Sul/Nascente',\n  'Loja 2': 'Corredor Sul/Nascente',\n  // Other mappings\n  'Espaço n.º 4': 'Área de Restauração',\n};\n\nconst LoginScreen = ({ navigation }) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const validUsers = [\n    { username: 'cguerreiro', password: 'mml1908' },\n    { username: 'lmurtinha', password: 'mml1908' },\n    { username: 'mcampos', password: 'mml1908' },\n  ];\n\n  const handleLogin = () => {\n    const userFound = validUsers.find(\n      (user) => user.username === username && user.password === password\n    );\n    if (userFound) {\n      const userName = USER_NAMES[userFound.username];\n      navigation.navigate('AttendanceScreen', { username: userName });\n    } else {\n      Alert.alert('Erro', 'Utilizador ou senha incorretos');\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Login</Text>\n      <TextInput\n        style={styles.input}\n        placeholder=\"Nome de Utilizador\"\n        value={username}\n        onChangeText={setUsername}\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Senha\"\n        secureTextEntry\n        value={password}\n        onChangeText={setPassword}\n      />\n      <TouchableOpacity style={styles.loginButton} onPress={handleLogin}>\n        <Text style={styles.loginButtonText}>Entrar</Text>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nconst AttendanceScreen = ({ route, navigation }) => {\n  const { username } = route.params;\n  const [currentDateTime, setCurrentDateTime] = useState('');\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const now = new Date();\n      const dateTime = `${now.toLocaleDateString(\n        'pt-PT'\n      )} ${now.toLocaleTimeString('pt-PT')}`;\n      setCurrentDateTime(dateTime);\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.greeting}>Olá, {username}</Text>\n      <Text style={styles.dateTime}>{currentDateTime}</Text>\n      <TouchableOpacity\n        style={styles.startButton}\n        onPress={() => navigation.navigate('ModoRegistoScreen', { username })}\n      >\n        <Text style={styles.startButtonText}>Registo de Assiduidade</Text>\n      </TouchableOpacity>\n      <TouchableOpacity style={styles.disabledButton} disabled={true}>\n        <Text style={styles.disabledButtonText}>Registo de Incumprimento</Text>\n      </TouchableOpacity>\n      <TouchableOpacity style={styles.disabledButton} disabled={true}>\n        <Text style={styles.disabledButtonText}>Contactos</Text>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nconst ModoRegistoScreen = ({ route, navigation }) => {\n  const { username } = route.params;\n  const [attendanceStatus, setAttendanceStatus] = useState({});\n  const [completedBy, setCompletedBy] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [refreshing, setRefreshing] = useState(false);\n\n  useEffect(() => {\n    fetchAttendanceStatusForCorridors();\n  }, []);\n\n  const onRefresh = async () => {\n    setRefreshing(true);\n    try {\n      await fetchAttendanceStatusForCorridors();\n    } catch (error) {\n      console.error('Error refreshing data:', error);\n    } finally {\n      setRefreshing(false);\n    }\n  };\n\n  const fetchAttendanceStatusForCorridors = async () => {\n    setLoading(true);\n    const corridors = [\n      'Corredor Sul/Poente',\n      'Corredor Sul/Central',\n      'Corredor Sul/Nascente',\n      'Corredor Norte/Nascente',\n      'Corredor Norte/Central',\n      'Corredor Norte/Poente',\n      'Área de Restauração',\n    ];\n    const currentDay = new Date().getDate();\n\n    let statusUpdates = {};\n    let completedByMap = {\n      MC: 'Marco Campos',\n      LM: 'Luis Murtinha',\n      CG: 'Carlos Guerreiro',\n    };\n\n    try {\n      const url = `https://script.google.com/macros/s/AKfycbwFXL9TlYOTaILPD0hT-tjn5BycAWxhe10Gfo8IgF-Vg51hJVpGkBR5RCFVNYv0LOtd/exec?day=${currentDay}&corridors=${encodeURIComponent(\n        JSON.stringify(corridors)\n      )}`;\n\n      const response = await fetch(url);\n      const responseText = await response.text();\n\n      Alert.alert(`Response`, `URL: ${url}\\n\\nResponse: ${responseText}`);\n\n      const data = JSON.parse(responseText);\n\n      for (let corridor of corridors) {\n        if (data[corridor] && data[corridor].attendanceCompleted) {\n          statusUpdates[corridor] = true;\n          if (data[corridor].attendanceCompletedBy) {\n            setCompletedBy(\n              completedByMap[data[corridor].attendanceCompletedBy] || ''\n            );\n          }\n        } else {\n          statusUpdates[corridor] = false;\n        }\n      }\n\n      setAttendanceStatus((prevStatus) => ({\n        ...prevStatus,\n        ...statusUpdates,\n      }));\n    } catch (error) {\n      console.error('Error fetching attendance status:', error);\n      Alert.alert(\n        'Error',\n        `Failed to fetch attendance status: ${error.message}`\n      );\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handlePress = (sequence, title, corridor) => {\n    const remainingSequence = sequence.filter(\n      (place) => !attendanceStatus[place]\n    );\n\n    navigation.navigate('RegistoScreen', {\n      sequence: remainingSequence,\n      headerTitle: title,\n      corridor,\n      username,\n    });\n  };\n\n  if (loading) {\n    return (\n      <View style={styles.container}>\n        <ActivityIndicator size=\"large\" color=\"#0000ff\" />\n      </View>\n    );\n  }\n\n  return (\n    <ScrollView\n      contentContainerStyle={styles.container}\n      refreshControl={\n        <RefreshControl refreshing={refreshing} onRefresh={onRefresh} />\n      }\n    >\n      <Text style={styles.titleTop}>Modo de registo</Text>\n      <TouchableOpacity\n        style={[\n          styles.rondaButton,\n          Object.keys(attendanceStatus).some((place) => attendanceStatus[place])\n            ? styles.greenButton\n            : styles.redButton,\n        ]}\n        onPress={() =>\n          handlePress(SEQUENCIA, 'Ronda Completa', 'Ronda Completa')\n        }\n      >\n        <Text style={styles.rondaButtonText}>Ronda</Text>\n      </TouchableOpacity>\n      <Text style={styles.subTitle}>Corredores</Text>\n\n      <View style={styles.row}>\n        <TouchableOpacity\n          style={[\n            styles.tallButton,\n            attendanceStatus['Corredor Norte/Poente']\n              ? styles.greenButton\n              : styles.redButton,\n          ]}\n          onPress={() =>\n            handlePress(\n              [\n                'Banca 41',\n                'Banca 42',\n                // Other entries\n                'Loja 26',\n              ],\n              'Corredor Norte/Poente',\n              'Corredor Norte/Poente'\n            )\n          }\n        >\n          <Text style={styles.buttonText}>Norte Poente</Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={[\n            styles.tallButton,\n            attendanceStatus['Corredor Norte/Central']\n              ? styles.greenButton\n              : styles.redButton,\n          ]}\n          onPress={() =>\n            handlePress(\n              [\n                'Banca 15, 16, 17',\n                // Other entries\n                'Banca 40',\n              ],\n              'Corredor Norte/Central',\n              'Corredor Norte/Central'\n            )\n          }\n        >\n          <Text style={styles.buttonText}>Norte Central</Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={[\n            styles.tallButton,\n            attendanceStatus['Corredor Norte/Nascente']\n              ? styles.greenButton\n              : styles.redButton,\n          ]}\n          onPress={() =>\n            handlePress(\n              [\n                'Banca 3',\n                'Banca 4',\n                // Other entries\n                'Loja 14',\n              ],\n              'Corredor Norte/Nascente',\n              'Corredor Norte/Nascente'\n            )\n          }\n        >\n          <Text style={styles.buttonText}>Norte Nascente</Text>\n        </TouchableOpacity>\n      </View>\n\n      <TouchableOpacity\n        style={[\n          styles.smallSquareButton,\n          attendanceStatus['Área de Restauração']\n            ? styles.greenButton\n            : styles.redButton,\n        ]}\n        onPress={() =>\n          handlePress(\n            ['Espaço n.º 1', 'Espaço n.º 2', 'Espaço n.º 3', 'Espaço n.º 4'],\n            'Espaços Restauração',\n            'Área de Restauração'\n          )\n        }\n      >\n        <Text style={styles.buttonText}>Praça Central</Text>\n      </TouchableOpacity>\n\n      <View style={styles.row}>\n        <TouchableOpacity\n          style={[\n            styles.tallButton,\n            attendanceStatus['Corredor Sul/Poente']\n              ? styles.greenButton\n              : styles.redButton,\n          ]}\n          onPress={() =>\n            handlePress(\n              [\n                'Banca 56, 71',\n                'Banca 57, 58',\n                // Other entries\n                'Banca 63',\n              ],\n              'Corredor Sul/Poente',\n              'Corredor Sul/Poente'\n            )\n          }\n        >\n          <Text style={styles.buttonText}>Sul Poente</Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={[\n            styles.tallButton,\n            attendanceStatus['Corredor Sul/Central']\n              ? styles.greenButton\n              : styles.redButton,\n          ]}\n          onPress={() =>\n            handlePress(\n              [\n                'Banca 64',\n                'Banca 65',\n                // Other entries\n                'Banca 81',\n              ],\n              'Corredor Sul/Central',\n              'Corredor Sul/Central'\n            )\n          }\n        >\n          <Text style={styles.buttonText}>Sul Central</Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={[\n            styles.tallButton,\n            attendanceStatus['Corredor Sul/Nascente']\n              ? styles.greenButton\n              : styles.redButton,\n          ]}\n          onPress={() =>\n            handlePress(\n              [\n                'Banca 82, 83',\n                // Other entries\n                'Loja 7',\n              ],\n              'Corredor Sul/Nascente',\n              'Corredor Sul/Nascente'\n            )\n          }\n        >\n          <Text style={styles.buttonText}>Sul Nascente</Text>\n        </TouchableOpacity>\n      </View>\n\n      {completedBy ? (\n        <Text style={styles.completedByText}>\n          Assiduidade feita por: {completedBy}\n        </Text>\n      ) : null}\n    </ScrollView>\n  );\n};\n\nconst RegistoScreen = ({ route, navigation }) => {\n  const { sequence, corridor, username } = route.params;\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [maxIndexReached, setMaxIndexReached] = useState(0);\n  const [faltas, setFaltas] = useState({});\n  const [presencas, setPresencas] = useState({});\n  const [selections, setSelections] = useState({});\n\n  const currentPlace = sequence[currentIndex] || '';\n  const nome = NOMES[currentPlace] || 'Nome não encontrado';  // Ensure this is a string\n  const corridorName = corridorMap[currentPlace] || corridor || '';\n\n  useEffect(() => {\n    console.log(`currentPlace: ${currentPlace}, nome: ${nome}`); // Debugging log\n  }, [currentPlace]);\n\n  const handlePressFalta = () => {\n    setFaltas((prevFaltas) => ({\n      ...prevFaltas,\n      [currentPlace]: 1,\n    }));\n    setSelections((prevSelections) => ({\n      ...prevSelections,\n      [currentPlace]: 'falta',\n    }));\n    moveForward();\n  };\n\n  const handlePressPresente = () => {\n    setPresencas((prevPresencas) => ({\n      ...prevPresencas,\n      [currentPlace]: 1,\n    }));\n    setSelections((prevSelections) => ({\n      ...prevSelections,\n      [currentPlace]: 'presente',\n    }));\n    moveForward();\n  };\n\n  const moveForward = () => {\n    const nextIndex = currentIndex + 1;\n    if (nextIndex < sequence.length) {\n      setCurrentIndex(nextIndex);\n      setMaxIndexReached(Math.max(maxIndexReached, nextIndex));\n    } else {\n      navigation.navigate('SummaryScreen', {\n        faltas,\n        presencas,\n        corridor,\n        username,\n      });\n    }\n  };\n\n  const moveBackward = () => {\n    if (currentIndex > 0) {\n      setCurrentIndex(currentIndex - 1);\n    }\n  };\n\n  const selection = selections[currentPlace];\n\n  return (\n    <View style={styles.container}>\n      {/* Displaying Texts */}\n      <Text style={styles.corridor}>{String(corridorName)}</Text> {/* Ensure it's a string */}\n      <Text style={styles.nome}>{String(nome)}</Text> {/* Ensure it's a string */}\n      <Text style={styles.bancaTitle}>{String(currentPlace)}</Text> {/* Ensure it's a string */}\n\n      {/* Displaying the Buttons Below the Text */}\n      <View style={styles.fullWidthButtons}>\n        <TouchableOpacity\n          style={[styles.fullWidthButton, styles.faltaButton]}\n          onPress={handlePressFalta}\n        >\n          <Text style={styles.buttonText}>Falta</Text>\n          {selection === 'falta' && (\n            <Ionicons\n              name=\"checkmark-circle\"\n              size={24}\n              color=\"white\"\n              style={styles.checkmark}\n            />\n          )}\n        </TouchableOpacity>\n\n        <TouchableOpacity\n          style={[styles.fullWidthButton, styles.presenteButton]}\n          onPress={handlePressPresente}\n        >\n          <Text style={styles.buttonText}>Presente</Text>\n          {selection === 'presente' && (\n            <Ionicons\n              name=\"checkmark-circle\"\n              size={24}\n              color=\"white\"\n              style={styles.checkmark}\n            />\n          )}\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n};\n\n\n\n\n\nconst SummaryScreen = ({ route, navigation }) => {\n  const { faltas, presencas, corridor, username } = route.params;\n\n  const scriptURL =\n    'https://script.google.com/macros/s/AKfycbx24YwpRLEyhBFLZ-CxuHrhUFk51gag5BllQJh2FcW7ToHserqUeSLXqg65JWzBLRhM/exec';\n\n  const handleSendData = async () => {\n    const data = {\n      mes: new Date().toLocaleString('default', { month: 'long' }),\n      dia: new Date().getDate(),\n      faltas: Object.keys(faltas).map((key) => ({\n        concessionario: NOMES[key],\n        dia: new Date().getDate(),\n        reason: faltas[key]\n      })),\n      corridor: corridor,\n      username: username,\n    };\n\n    try {\n      const response = await fetch(scriptURL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      });\n\n      const result = await response.text();\n      Alert.alert('Server Response', result);\n    } catch (error) {\n      console.error('Error:', error);\n      Alert.alert('Error', `Failed to send attendance data: ${error.message}`);\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Resumo do Dia</Text>\n      <Text style={styles.summaryText}>\n        Faltas Lojas: {countType('Loja', faltas)}\n      </Text>\n      <Text style={styles.summaryText}>\n        Faltas Bancas: {countType('Banca', faltas)}\n      </Text>\n      <Text style={styles.summaryText}>\n        Faltas Totais: {Object.values(faltas).reduce((sum, curr) => sum + (curr === 1 || curr === 'DE' || curr === 'FE' ? 1 : 0), 0)}\n      </Text>\n      <Text style={styles.summaryText}>\n        Presenças Lojas: {countType('Loja', presencas)}\n      </Text>\n      <Text style={styles.summaryText}>\n        Presenças Bancas: {countType('Banca', presencas)}\n      </Text>\n      <Text style={styles.summaryText}>\n        Presenças Totais:{' '}\n        {Object.values(presencas).reduce((sum, curr) => sum + curr, 0)}\n      </Text>\n      <TouchableOpacity style={styles.sendButton} onPress={handleSendData}>\n        <Text style={styles.sendButtonText}>Enviar</Text>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nconst countType = (type, counts) =>\n  Object.keys(counts)\n    .filter((key) => key.includes(type))\n    .reduce((sum, key) => {\n      const value = counts[key];\n      return sum + (value === 1 || value === 'DE' || value === 'FE' ? 1 : 0);\n    }, 0);\n\nconst Stack = createStackNavigator();\n\nconst App = () => {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator initialRouteName=\"Login\">\n        <Stack.Screen name=\"Login\" component={LoginScreen} />\n        <Stack.Screen name=\"AttendanceScreen\" component={AttendanceScreen} />\n        <Stack.Screen name=\"ModoRegistoScreen\" component={ModoRegistoScreen} />\n        <Stack.Screen name=\"RegistoScreen\" component={RegistoScreen} />\n        <Stack.Screen name=\"SummaryScreen\" component={SummaryScreen} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: width * 0.05,\n  },\n  titleTop: {\n    fontSize: RFPercentage(3.5),\n    marginBottom: height * 0.02,\n    textAlign: 'center',\n  },\n  subTitle: {\n    fontSize: RFPercentage(2.5),\n    marginVertical: height * 0.02,\n    textAlign: 'center',\n  },\n  greeting: {\n    fontSize: RFPercentage(2.5),\n    color: 'black',\n  },\n  dateTime: {\n    fontSize: RFPercentage(2),\n    color: 'black',\n  },\n  startButton: {\n    marginTop: height * 0.05,\n    paddingVertical: height * 0.02,\n    paddingHorizontal: width * 0.3,\n    backgroundColor: 'blue',\n    borderRadius: 5,\n  },\n  startButtonText: {\n    color: 'white',\n    fontSize: RFPercentage(2.5),\n  },\n  disabledButton: {\n    marginTop: height * 0.02,\n    paddingVertical: height * 0.02,\n    paddingHorizontal: width * 0.3,\n    backgroundColor: 'gray',\n    borderRadius: 5,\n  },\n  disabledButtonText: {\n    color: 'darkgray',\n    fontSize: RFPercentage(2.5),\n  },\n  rondaButton: {\n    paddingVertical: height * 0.02,\n    paddingHorizontal: width * 0.3,\n    borderRadius: 5,\n  },\n  rondaButtonText: {\n    color: 'white',\n    fontSize: RFPercentage(2.5),\n  },\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    width: '100%',\n    marginVertical: height * 0.01,\n  },\n  tallButton: {\n    flex: 1,\n    marginHorizontal: '1%',\n    paddingVertical: height * 0.1,\n    borderRadius: 5,\n  },\n  smallSquareButton: {\n    marginVertical: height * 0.03,\n    padding: width * 0.05,\n    borderRadius: 5,\n    width: '30%',\n    alignItems: 'center',\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: RFPercentage(2.5),\n    textAlign: 'center',\n  },\n  fullWidthButtons: {\n    flexDirection: 'row',\n    width: '100%',\n    height: '50%', // Adjust to make the buttons take half of the screen height\n  },\n  fullWidthButton: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  faltaButton: {\n    backgroundColor: 'red',\n  },\n  presenteButton: {\n    backgroundColor: 'green',\n  },\n  corridor: {\n    fontSize: RFPercentage(3.5),\n    color: 'black',\n    fontWeight: 'bold',\n    textAlign: 'center',\n    marginBottom: height * 0.02,\n  },\n  nome: {\n    fontSize: RFPercentage(3),\n    color: 'black',\n    textAlign: 'center',\n    marginBottom: height * 0.02,\n  },\n  bancaTitle: {\n    fontSize: RFPercentage(2.5),\n    color: 'black',\n    textAlign: 'center',\n    marginBottom: height * 0.05,\n  },\n\n  overlayTextContainerLeft: {\n    position: 'absolute',\n    top: height * 0.05,\n    left: width * 0.05,\n  },\n  overlayTextContainerRight: {\n    position: 'absolute',\n    top: height * 0.05,\n    right: width * 0.05,\n  },\n  overlayText: {\n    color: 'white',\n    fontSize: RFPercentage(2),\n  },\n  summaryText: {\n    fontSize: RFPercentage(2.5),\n    marginBottom: height * 0.02,\n    textAlign: 'center',\n  },\n  sendButton: {\n    marginTop: height * 0.05,\n    paddingVertical: height * 0.02,\n    paddingHorizontal: width * 0.3,\n    backgroundColor: 'blue',\n    borderRadius: 5,\n  },\n  sendButtonText: {\n    color: 'white',\n    fontSize: RFPercentage(2.5),\n  },\n  arrowLeft: {\n    position: 'absolute',\n    bottom: height * 0.01,\n    left: '10%',\n  },\n  arrowRight: {\n    position: 'absolute',\n    bottom: height * 0.01,\n    right: '10%',\n  },\n  checkmark: {\n    marginTop: height * 0.01,\n  },\n  input: {\n    width: '100%',\n    padding: width * 0.03,\n    marginBottom: height * 0.02,\n    borderColor: 'gray',\n    borderWidth: 1,\n    fontSize: RFPercentage(2.5),\n  },\n  loginButton: {\n    marginTop: height * 0.05,\n    backgroundColor: 'blue',\n    paddingVertical: height * 0.02,\n    paddingHorizontal: width * 0.3,\n    borderRadius: 5,\n  },\n  loginButtonText: {\n    color: 'white',\n    fontSize: RFPercentage(2.5),\n  },\n  redButton: {\n    backgroundColor: 'red',\n  },\n  greenButton: {\n    backgroundColor: 'green',\n  },\n  completedByText: {\n    marginTop: height * 0.03,\n    fontSize: RFPercentage(2.5),\n    color: 'black',\n    textAlign: 'center',\n  },\n  overlayButtonContainer: {\n    position: 'absolute',\n    top: height * 0.35,\n    left: '10%',\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n  },\n  overlayButton: {\n    backgroundColor: '#007bff',\n    paddingVertical: height * 0.01,\n    paddingHorizontal: width * 0.05,\n    borderRadius: 5,\n    marginRight: width * 0.02,\n    alignItems: 'center',\n  },\n  overlayButtonText: {\n    color: 'white',\n    fontSize: RFPercentage(2),\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n});\n\nexport default App;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [557], () => (__webpack_require__(5036)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["enableScreens","width","height","Dimensions","get","USER_NAMES","cguerreiro","lmurtinha","mcampos","SEQUENCIA","NOMES","corridorMap","LoginScreen","navigation","username","setUsername","useState","password","setPassword","validUsers","_jsxs","View","style","styles","container","children","_jsx","Text","title","TextInput","input","placeholder","value","onChangeText","secureTextEntry","TouchableOpacity","loginButton","onPress","handleLogin","userFound","find","user","userName","navigate","Alert","alert","loginButtonText","AttendanceScreen","route","params","currentDateTime","setCurrentDateTime","useEffect","interval","setInterval","now","Date","dateTime","toLocaleDateString","toLocaleTimeString","clearInterval","greeting","startButton","startButtonText","disabledButton","disabled","disabledButtonText","ModoRegistoScreen","attendanceStatus","setAttendanceStatus","completedBy","setCompletedBy","loading","setLoading","refreshing","setRefreshing","fetchAttendanceStatusForCorridors","async","corridors","currentDay","getDate","statusUpdates","completedByMap","MC","LM","CG","url","encodeURIComponent","JSON","stringify","response","fetch","responseText","text","data","parse","corridor","attendanceCompleted","attendanceCompletedBy","prevStatus","Object","assign","error","console","message","handlePress","sequence","remainingSequence","filter","place","headerTitle","ActivityIndicator","size","color","ScrollView","contentContainerStyle","refreshControl","RefreshControl","onRefresh","titleTop","rondaButton","keys","some","greenButton","redButton","rondaButtonText","subTitle","row","tallButton","buttonText","smallSquareButton","completedByText","RegistoScreen","currentIndex","setCurrentIndex","maxIndexReached","setMaxIndexReached","faltas","setFaltas","presencas","setPresencas","selections","setSelections","currentPlace","nome","corridorName","log","moveForward","nextIndex","length","Math","max","selection","String","bancaTitle","fullWidthButtons","fullWidthButton","faltaButton","handlePressFalta","prevFaltas","prevSelections","Ionicons","name","checkmark","presenteButton","handlePressPresente","prevPresencas","SummaryScreen","summaryText","countType","values","reduce","sum","curr","sendButton","mes","toLocaleString","month","dia","map","key","concessionario","reason","method","headers","body","result","sendButtonText","type","counts","includes","Stack","createStackNavigator","StyleSheet","create","flex","justifyContent","alignItems","padding","fontSize","RFPercentage","marginBottom","textAlign","marginVertical","marginTop","paddingVertical","paddingHorizontal","backgroundColor","borderRadius","flexDirection","marginHorizontal","fontWeight","overlayTextContainerLeft","position","top","left","overlayTextContainerRight","right","overlayText","arrowLeft","bottom","arrowRight","borderColor","borderWidth","overlayButtonContainer","overlayButton","marginRight","overlayButtonText","App","NavigationContainer","Navigator","initialRouteName","Screen","component","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","id","loaded","__webpack_modules__","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","every","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","nmd","paths","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","forEach","bind","push","__webpack_exports__"],"sourceRoot":""}